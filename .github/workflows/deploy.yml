name: CI/CD API Client

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.test_step.outcome }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  deploy:
    needs: test
    if: ${{ needs.test.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        TAG=$(echo $GITHUB_SHA | head -c7)
        docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/ptk-product-api:$TAG .
        docker push ${{ secrets.DOCKER_USERNAME }}/ptk-product-api:$TAG
      env:
        GITHUB_SHA: ${{ github.sha }}

    - name: SSH and Deploy to Kubernetes
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          TAG=$(echo ${{ github.sha }} | head -c7)
          kubectl set image deployment/product-deployment product=${{ secrets.DOCKER_USERNAME }}/ptk-product-api:$TAG
          kubectl rollout restart deployment/product-deployment
        